// 解析时间戳
function timeSlice(time){
  var date = getDate(time * 1000);
  Y = date.getFullYear();
  M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1);
  D = date.getDate();
  h = date.getHours();
  m = (date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes());
  return Y + '-' + M + '-' + M;
}

// 解析线路类型
function tripTypeSlice(data){
  switch (data) {
    case "sightseeing":
      var activity = "旅行";
      break;
    case "photography":    
      activity = "摄影";
      break;
    case "biking":    
      activity = "骑行";
      break;
    case "hiking":    
      activity = "徒步";
      break;
    case "mountaineering":  
      activity = "登山";
      break;
    case "driving":  
      activity = "自驾车";
      break;
    case "cross_country":    
      activity = "越野";
      break;
    case "motorcycling":
      activity = "摩托车";
      break;
    case "mountain_biking":
      activity = "山地骑行";
      break;
    case "road_biking":
      activity = "公路骑行";
      break;
    case "running":
      activity = "跑步";
      break;
    case "sailing":
      activity = "航海";
      break;
    case "skiing":
      activity = "滑雪";
      break;
    case "paragliding":
      activity = "滑翔伞";
      break;
    case "geocaching":
      activity = "寻宝";
      break;
    case "gps_drawing":     
      activity = "Gps作画";
      break;
    case "skateboard":      
      activity = "滑板";
      break
    case "other":      
      activity = "其他";
      break;
  }
  return activity;
}


// 初始化里程
function tripLength(data){
  var num = data.toFixed(2)
  return num
}
function tripLengths(data){
  var num = parseInt(data)
  return num
}

function durationTime(seconds) {  
  seconds = parseInt(seconds)     
  var min = Math.floor(seconds / 60),
      second = seconds % 60,
      hour, newMin;

  if (min >=  60) {
      hour = Math.floor(min / 60);
      newMin = min % 60;
      var teshu = ((hour * 60 + newMin) / 60).toFixed(2); 
  }else{
      teshu = (min / 60).toFixed(2); 
  }

  if (second < 10) { second = '0' + second;}
  if (min < 10) { min = '0' + min;}       
  if(newMin < 10) {newMin = '0' + newMin}       
  return time = hour? (hour + ':' + newMin + ':' + second) : (min + ':' + second);
}


module.exports = {
  timeSlice: timeSlice,
  tripTypeSlice: tripTypeSlice,
  tripLength: tripLength,
  durationTime:durationTime,
  tripLengths:tripLengths
}